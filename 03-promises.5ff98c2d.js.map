{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAepC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAIFS,MAAK,SAAAC,GACJC,EAAAlB,GAASmB,OAAOC,QAAQH,E,IAEzBI,OAAM,SAAAC,GACLJ,EAAAlB,GAASmB,OAAOI,QAAQD,E,IA/B9BpB,EAAKsB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBAKF,IAJA,IAAMC,EAAaC,SAAS1B,EAAK2B,SAAgB,MAAEC,OAC7CC,EAAcH,SAAS1B,EAAK2B,SAAiB,OAAEC,OAC/CE,EAAYJ,SAAS1B,EAAK2B,SAAe,KAAEC,OAExCG,EAAI,EAAGA,EAAIF,EAAaE,IAAK,CAGpC5B,EAFsB4B,EAAI,EACLN,EAAaM,EAAID,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const delayInput = parseInt(form.elements['delay'].value);\n  const amountInput = parseInt(form.elements['amount'].value);\n  const stepInput = parseInt(form.elements['step'].value);\n\n  for (let i = 0; i < amountInput; i++) {\n    const promiseNumber = i + 1;\n    const promiseDelay = delayInput + i * stepInput;\n    createPromise(promiseNumber, promiseDelay);\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(result => {\n      Notiflix.Notify.success(result);\n    })\n    .catch(error => {\n      Notiflix.Notify.failure(error);\n    });\n}\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","addEventListener","e","preventDefault","delayInput","parseInt","elements","value","amountInput","stepInput","i"],"version":3,"file":"03-promises.5ff98c2d.js.map"}